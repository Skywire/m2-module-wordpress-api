name: Magento 2 Tests

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  run_tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: ['7.2', '7.3']
    steps:
      - uses: actions/checkout@v2

      - uses: getong/rabbitmq-action@v1.2
        with:
          rabbitmq version: '3.8.2-management-alpine'
          host port: 5672
          rabbitmq user: 'guest'
          rabbitmq password: 'guest'

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: bcmath, ctype, curl, dom, gd, hash, iconv, intl, mbstring, openssl, pdo_mysql, simplexml, soap, xsl, zip
          coverage: xdebug

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Composer cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Configure composer
        run: |
          composer config -g github-protocols https # Only add this if you're testing a public repo. It  will ensure everythings cloned via HTTPS not SSH.
          composer config -g http-basic.repo.magento.com ${{ secrets.MAGENTO_USERNAME}} ${{ secrets.MAGENTO_PASSWORD}}
          composer config -g github-oauth.github.com ${{ secrets.GITHUB_TOKEN }}
          composer config -g http-basic.repo.packagist.com tech@skywire.co.uk ${{ secrets.PACKAGIST_KEY }}
          composer config -g repositories.repo.packagist.com composer https://repo.packagist.com/skywire/
          composer config -g repositories.packagist.org false

      - name: Download magento
        id: download-magento
        run: |
          composer create-project --no-install --repository-url=https://repo.magento.com/ magento/project-community-edition=2.3.4 ./magento

      - name: Add module under test
        id: add-module
        run: |
          cd magento
          composer require `jq -r .name ../composer.json` dev-${{ github.head_ref }} --prefer-source --no-update
          composer require skywire/m2-actions-workflow ^1.0.0 --prefer-source --no-update
          cd ../

      - name: Install MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql version: '5.7'
          mysql database: 'magento_integration_tests'
          mysql root password: 123123q

      - name: Install Dependencies
        run: |
          cd magento
          composer install --no-interaction
          cd ../

      - name: Unit Tests
        run: |
          cd magento
          cp .github/workflows/config/unit/* dev/tests/unit/
          cd dev/tests/unit
          ../../../vendor/bin/phpunit -c phpunit.xml
          cd ../

      - name: Install canned server
        run: sudo npm -g install canned

      - name: Integration Tests
        run: |
          cd magento
          cp -r .github/workflows/config/integration/* dev/tests/integration/
          nohup canned vendor/skywire/wordpressapi/src/Test/Integration/canned > /dev/null 2>&1 &
          cd dev/tests/integration
          ../../../vendor/bin/phpunit -c phpunit.xml
          cd ../
